name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Enable manual triggering
    inputs:
      browser:
        description: 'Choose browser (chromium, msedge)'
        required: true

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - run: dotnet build
      - name: Ensure browsers are installed
        run: pwsh bin/Debug/net8.0/playwright.ps1 install --with-deps
      - name: Run your tests based on chosen browser
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ "${{ github.event.inputs.browser }}" == "chromium" ]; then
              dotnet test --settings chromium.runsettings
            elif [ "${{ github.event.inputs.browser }}" == "msedge" ]; then
              dotnet test --settings msedge.runsettings
            fi
          else
            # Default to Chromium if not manually triggered
            dotnet test --settings chromium.runsettings
          fi
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: bin/Debug/net8.0/playwright-traces
      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results
      - name: Download and Install Allure
        run: |
          wget -q https://github.com/allure-framework/allure2/releases/download/2.14.0/allure-2.14.0.tgz
          tar -zxvf allure-2.14.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.14.0/bin/allure /usr/bin/allure
      - name: Generate Allure report
        run: allure generate allure-results --clean -o allure-report

      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Prepare GitHub Pages branch
        run: |
          git checkout --orphan gh-pages
          git rm -rf .
          touch .nojekyll
          git add .nojekyll
          git commit -m "Initialize gh-pages branch"

          # Fetch the latest changes from the remote repository
          git fetch origin gh-pages

          # Merge changes into the local gh-pages branch, allowing unrelated histories
          git merge --allow-unrelated-histories origin/gh-pages

          # Push the changes back to the remote repository
          git push origin gh-pages

      - name: Copy Allure report to gh-pages branch
        run: |
          cp -r allure-report/* .

      - name: Commit and push Allure report to gh-pages
        run: |
          git add .
          git commit -m "Update Allure report"
          git push origin gh-pages
